<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Interlines - Alexandre M. Savio</title><link href="https://alexsavio.github.io/" rel="alternate"></link><link href="https://alexsavio.github.io/feeds/alexandre-m-savio.atom.xml" rel="self"></link><id>https://alexsavio.github.io/</id><updated>2019-06-11T12:00:00+02:00</updated><subtitle>Lost in spikes</subtitle><entry><title>Git usage guidelines for team collaboration</title><link href="https://alexsavio.github.io/git-collaboration-guidelines.html" rel="alternate"></link><published>2019-06-11T12:00:00+02:00</published><updated>2019-06-11T12:00:00+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2019-06-11:/git-collaboration-guidelines.html</id><summary type="html">&lt;p&gt;Suggestions on how to use a code repository with git for&amp;nbsp;teams.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a set of rules that I have been gathering in the past few years, which work well for most of the projects I worked on with small teams of 3-8 people. These guidelines are heavily based on the &lt;a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines"&gt;angular.js/&lt;span class="caps"&gt;DEVELOPERS&lt;/span&gt;.md document on  GitHub&lt;/a&gt;.
This is not about &lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"&gt;GitFlow&lt;/a&gt;, I think it is too complex and goes against fast development cycles. Build good and reliable &lt;span class="caps"&gt;CI&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt; pipelines to be able to deliver faster, use canary releases whenever&amp;nbsp;possible.&lt;/p&gt;
&lt;h2&gt;Branching&amp;nbsp;model&lt;/h2&gt;
&lt;p&gt;Always create a new branch from an updated &amp;#8220;master&amp;#8221; branch.
The branches should have a short life (no more than 2 days) and have a very determined objective.
Once the objective is reached, a Pull Request (&lt;span class="caps"&gt;PR&lt;/span&gt;) should be created to merge the branch to “master”.
Once the branch is merged, it should be deleted.
Always merge to&amp;nbsp;“master”.&lt;/p&gt;
&lt;h3&gt;Branch&amp;nbsp;names&lt;/h3&gt;
&lt;p&gt;The branch names are not that important in very small teams, but when the team is bigger or work remotely,
a pattern for the branch names is also good to follow. Here is a&amp;nbsp;suggestion:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ticket_id&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some tools like Sourcetree from Atlassian pick the &lt;code&gt;/&lt;/code&gt; from the branch name and splits the name in their &lt;span class="caps"&gt;GUI&lt;/span&gt;,
so you can see the different types of branches as in different&amp;nbsp;folders.&lt;/p&gt;
&lt;h4&gt;Type&lt;/h4&gt;
&lt;p&gt;The &lt;type&gt; describes the generic objective of the branch, it can be one of the&amp;nbsp;following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;feat&lt;/strong&gt;: a new&amp;nbsp;feature,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fix&lt;/strong&gt;: a bug&amp;nbsp;fix,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docs&lt;/strong&gt;: documentation only changes (in or out of the&amp;nbsp;code),&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tests&lt;/strong&gt;: new tests or fixes in&amp;nbsp;tests,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;refactor&lt;/strong&gt;: code change that neither fixes a bug or adds a&amp;nbsp;feature,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;style&lt;/strong&gt;: code changes that&amp;nbsp;neither,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chore&lt;/strong&gt;: Changes to the build process or auxiliary tools for the project&amp;nbsp;maintenance,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;perf&lt;/strong&gt;: A code change that improves&amp;nbsp;performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Ticket &lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;This is optional, but is good if the purpose of the branch is too complex or if you follow a Scrum development process.
The &lt;ticket_id&gt; should be the identifier of the ticket or user story that the branch is going to solve.
The format depends on the project management tool you are using, but usually it has a project acronym and a number: &lt;code&gt;PRJ_123&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Subject&lt;/h4&gt;
&lt;p&gt;The &lt;subject&gt; part should be no more than 3 or 4 words about the specific objective of the branch.
If you don’t put a ticket &lt;span class="caps"&gt;ID&lt;/span&gt;, the specificity of the name is more&amp;nbsp;relevant.&lt;/p&gt;
&lt;h3&gt;Commit&amp;nbsp;messages&lt;/h3&gt;
&lt;p&gt;Here we follow a very specific pattern in order to be able to parse the commit messages to automatically generate a
change log for each release in a &lt;span class="caps"&gt;CI&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt; process and also semantic release version bumps
with tools like semantic-release (available for Node.js and&amp;nbsp;Python).&lt;/p&gt;
&lt;h4&gt;Format&lt;/h4&gt;
&lt;p&gt;Each commit message consists of a header, a body and a footer. The header has a special format that includes a type, a scope and a&amp;nbsp;subject:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;BLANK&lt;/span&gt; &lt;span class="n"&gt;LINE&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;BLANK&lt;/span&gt; &lt;span class="n"&gt;LINE&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;footer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The header is mandatory and the scope of the header is optional.
Any line of the commit message cannot be longer 100 characters!
This allows the message to be easier to read on GitHub as well as in various git&amp;nbsp;tools.&lt;/p&gt;
&lt;h5&gt;Type&lt;/h5&gt;
&lt;p&gt;The &lt;type&gt; describes the generic objective of the commit, use the same types used for&amp;nbsp;branches.&lt;/p&gt;
&lt;h5&gt;Scope&lt;/h5&gt;
&lt;p&gt;The &lt;scope&gt; could be anything specifying place of the commit change. A scope should be a part of the project that the stakeholders understand.
The possible scopes can be agreed beforehand with the developers and/or stakeholders.
You can use * when the change affects more than a single scope, but you can also not put anything (remove the parentheses as&amp;nbsp;well).&lt;/p&gt;
&lt;h5&gt;Subject&lt;/h5&gt;
&lt;p&gt;The &lt;subject&gt; contains succinct description of the change:
- use the imperative, present tense: &amp;#8220;change&amp;#8221; not &amp;#8220;changed&amp;#8221; nor &amp;#8220;changes&amp;#8221;
- don&amp;#8217;t capitalize first letter
- no dot (.) at the end
Don’t use generic subjects as: &amp;#8216;debug&amp;#8217; or &amp;#8216;few fixes&amp;#8217;. Be clear and&amp;nbsp;specific.&lt;/p&gt;
&lt;h5&gt;Body&lt;/h5&gt;
&lt;p&gt;The &lt;body&gt; is optional, but if you use it, just as in the subject, use the imperative, present tense: &amp;#8220;change&amp;#8221; not &amp;#8220;changed&amp;#8221; nor &amp;#8220;changes&amp;#8221;.
The body should include the motivation for the change and contrast
this with the previous&amp;nbsp;behavior.&lt;/p&gt;
&lt;h5&gt;Footer&lt;/h5&gt;
&lt;p&gt;The &lt;footer&gt; is optional. The footer should contain any information about Breaking Changes and is also the place to reference GitHub issues that this commit closes.
Breaking Changes should start with the word &lt;span class="caps"&gt;BREAKING&lt;/span&gt; &lt;span class="caps"&gt;CHANGE&lt;/span&gt;: with a space or two newlines. The rest of the commit message is then used for this.
A detailed explanation can be found in the Angular.js&amp;nbsp;document.&lt;/p&gt;
&lt;h3&gt;Pull&amp;nbsp;Requests&lt;/h3&gt;
&lt;p&gt;The Pull or Merge Requests (&lt;span class="caps"&gt;PR&lt;/span&gt;) are used to share with your co-developers the code changes
you did in your branch and ask them to review it. Here we always do a &lt;span class="caps"&gt;PR&lt;/span&gt; from your branch to
the &amp;#8216;master&amp;#8217; branch.
In a &lt;span class="caps"&gt;PR&lt;/span&gt;, your colleagues will have a view of the differences between the branches and the
commits. You must also add a title and a description.
The title should be sufficient to understand what is being changed. In the description you should:
- make a useful description,
- describe what was changed in the pull request,
- explain why this &lt;span class="caps"&gt;PR&lt;/span&gt; exists,
- make it clear how it does what it sets out to do. E.g: Does it change a column in the database?
How is this being done? What happens to the old data?
- you may want to use screenshots to demonstrate what has changed if there is a
&lt;span class="caps"&gt;GUI&lt;/span&gt; involved in the&amp;nbsp;project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pull request size:&lt;/strong&gt; It should be small. The pull request must have a maximum of 250 lines of change.
&lt;strong&gt;Feature breaking:&lt;/strong&gt; Whenever it’s possible break pull requests into smaller ones.
&lt;strong&gt;Single Responsibility Principle:&lt;/strong&gt; The pull request should do only 1&amp;nbsp;thing.&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;CI&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;With this setup your &lt;span class="caps"&gt;CI&lt;/span&gt;/&lt;span class="caps"&gt;CD&lt;/span&gt; pipeline would:
1. run your checks and tests for every push to a &lt;span class="caps"&gt;PR&lt;/span&gt; and every merge to &amp;#8216;master&amp;#8217;,
2. run a deployment to your test environment every merge to &amp;#8216;master&amp;#8217;, and
3. enable a manual deployment to your production environment for every merge to &amp;#8216;master&amp;#8217;.
This deployment should trigger a release first, with automatic version bumping
and change log generation. Bitbucket-pipelines supports&amp;nbsp;this.&lt;/p&gt;
&lt;h3&gt;&lt;span style="color:red"&gt;Remember: git is a collaboration tool, not a reporting&amp;nbsp;tool.&lt;/span&gt;&lt;/h3&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hugooodias/the-anatomy-of-a-perfect-pull-request-567382bb6067"&gt;The anatomy of a perfect pull request – Hugo Dias –&amp;nbsp;Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.conventionalcommits.org/en/v1.0.0-beta.4/#specification"&gt;Conventional&amp;nbsp;Commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"&gt;Gitflow Workflow | Atlassian Git&amp;nbsp;Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines"&gt;angular.js/&lt;span class="caps"&gt;DEVELOPERS&lt;/span&gt;.md at master · angular/angular.js ·&amp;nbsp;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/semantic-release/semantic-release"&gt;GitHub - semantic-release/semantic-release: Fully automated version management and package&amp;nbsp;publishing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Git"></category><category term="git"></category><category term="collaboration"></category><category term="team"></category></entry><entry><title>Remove big files from a git repository</title><link href="https://alexsavio.github.io/git-cleanup-bfg.html" rel="alternate"></link><published>2017-12-30T12:28:00+01:00</published><updated>2017-12-30T12:28:00+01:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2017-12-30:/git-cleanup-bfg.html</id><summary type="html">&lt;p&gt;Remove large blobs from your git repository&amp;nbsp;history&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;&lt;span class="caps"&gt;BFG&lt;/span&gt; Repo-Cleaner&lt;/a&gt; is a tool to &amp;#8220;remove large or troublesome blobs&amp;#8221; from Git&amp;nbsp;repositories.&lt;/p&gt;
&lt;p&gt;Here goes a quick guide on how to remove files larger than 10&amp;nbsp;MiB.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Download the lastest release from https://rtyley.github.io/bfg-repo-cleaner/.
It includes a &lt;code&gt;.jar&lt;/code&gt; file which we will use through the command&amp;nbsp;line.&lt;/p&gt;
&lt;p&gt;You can use &lt;code&gt;bfg&lt;/code&gt; as an alias for &lt;code&gt;java -jar ~/Software/bfg-1.12.16.jar&lt;/code&gt;.
Meaning that &amp;#8220;&lt;code&gt;~/Software/bfg-1.12.16.jar&lt;/code&gt;&amp;#8221; is wherever you downloaded the &lt;code&gt;.jar&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;bfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;java -jar ~/Software/bfg-1.12.16.jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;First&amp;nbsp;step&lt;/h3&gt;
&lt;p&gt;First you must delete the blobs that you want to delete from the &lt;span class="caps"&gt;HEAD&lt;/span&gt; of your repository, commit, and&amp;nbsp;push.&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Clone your repository in mirror&amp;nbsp;mode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git clone --mirror git://example.com/some-big-repo.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run &lt;span class="caps"&gt;BFG&lt;/span&gt; to delete files bigger than 10MiB (see more examples in the project&amp;nbsp;documentation):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;bfg --strip-blobs-bigger-than 10M some-big-repo.git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Prune the reference log entries and&amp;nbsp;push:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; some-big-repo.git&lt;/span&gt;
&lt;span class="code-line"&gt;git reflog expire --expire&lt;span class="o"&gt;=&lt;/span&gt;now --all &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git gc --prune&lt;span class="o"&gt;=&lt;/span&gt;now --aggressive&lt;/span&gt;
&lt;span class="code-line"&gt;git push&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://rtyley.github.io/bfg-repo-cleaner/"&gt;https://rtyley.github.io/bfg-repo-cleaner/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Git"></category><category term="git"></category><category term="clean"></category><category term="trash"></category></entry><entry><title>Access Google Spreadsheets using gspread and OAuth2Client</title><link href="https://alexsavio.github.io/gspread_oauth2client_intro.html" rel="alternate"></link><published>2015-05-14T19:11:46+02:00</published><updated>2016-03-29T13:30:00+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2015-05-14:/gspread_oauth2client_intro.html</id><summary type="html">&lt;p&gt;How to access Google spreadsheets using the Python module gspread and the OAuth2Client authorization&amp;nbsp;system.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Jump to &lt;a href="#materials"&gt;the Materials and Methods section&lt;/a&gt; if you don&amp;#8217;t want to read the&amp;nbsp;introduction.&lt;/p&gt;
&lt;p&gt;This post presents a way of accessing Google Spreadsheets(&lt;span class="caps"&gt;GS&lt;/span&gt;) and securely distributing Python source code that  uses &lt;span class="caps"&gt;GS&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/spreadsheets/"&gt;Google spreadsheets&lt;/a&gt;(&lt;span class="caps"&gt;GS&lt;/span&gt;) are useful for fast deployment of simple
forms on the web as well as share and collaborate on simple data structures with other&amp;nbsp;people.&lt;/p&gt;
&lt;p&gt;Not everybody has enough experience with the sheet cell functionalities and the small devils of the spreadsheet world. You may find yourself trapped on the &lt;a href="https://support.google.com/docs"&gt;Google Docs help&lt;/a&gt; or looking for that non-existent function in the &lt;a href="https://support.google.com/docs/table/25273?hl=en"&gt;&lt;span class="caps"&gt;GS&lt;/span&gt; reference&lt;/a&gt; trying to program more complex data processes. In those cases I feel the urge to unleash the power of Python over the&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;There are ways of doing that through the Official Google Spreasheet &lt;span class="caps"&gt;API&lt;/span&gt;. The &lt;span class="caps"&gt;API&lt;/span&gt; is flexible but can take a considerable amount of work if your idea is &amp;#8220;just&amp;#8221; accessing the data of the spreadsheets and doing a few operations on&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;To leverage all the &lt;span class="caps"&gt;API&lt;/span&gt; work and help us all there is &lt;a href="https://github.com/burnash/gspread"&gt;gspread&lt;/a&gt;, which wraps up the &lt;span class="caps"&gt;API&lt;/span&gt; and makes clear and pragmatic functions&amp;nbsp;sprout.&lt;/p&gt;
&lt;h3&gt;How to authenticate through&amp;nbsp;gspread&lt;/h3&gt;
&lt;p&gt;Initially the authentication method to use gpsread was using username and password pair. This is a problem when you need to share your application with other people. You can&amp;#8217;t share your passwords, create user accounts for every user of your application or even, you would have to share your common document to every user you&amp;nbsp;have.&lt;/p&gt;
&lt;p&gt;In these situations ideally your application should prove its own identity to the &lt;span class="caps"&gt;API&lt;/span&gt;, but no user consent should be necessary. Similarly, in enterprise scenarios, your application could request delegated access to some resources. This is a possible scenario where OAuth2.0 comes to save&amp;nbsp;you.&lt;/p&gt;
&lt;h3&gt;OAuth2.0 authorization&amp;nbsp;framework&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://en.wikipedia.org/wiki/OAuth"&gt;OAuth2.0 authorization framework&lt;/a&gt; is being adopted by many web services as a secure way for 3rd-parties to deploy software that use their APIs. It is well summarized &lt;a href="https://developers.google.com/identity/protocols/OAuth2#serviceaccount"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the &lt;a href="http://tools.ietf.org/html/rfc6749"&gt;OAuth2.0 &lt;span class="caps"&gt;RFC&lt;/span&gt;&lt;/a&gt;&amp;nbsp;says:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The OAuth 2.0 authorization framework enables a third-party
application to obtain limited access to an &lt;span class="caps"&gt;HTTP&lt;/span&gt; service, either on
behalf of a resource owner by orchestrating an approval interaction
between the resource owner and the &lt;span class="caps"&gt;HTTP&lt;/span&gt; service, or by allowing the
third-party application to obtain access on its own behalf.  This
specification replaces and obsoletes the OAuth 1.0 protocol described
in &lt;span class="caps"&gt;RFC&lt;/span&gt;&amp;nbsp;5849.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2"&gt;Google has adopted OAuth 2.0&lt;/a&gt; for his APIs and web services. They also created a Python module for accessing resources protected by OAuth 2.0 called &lt;a href="https://github.com/google/oauth2client"&gt;oauth2client&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check &lt;a href="https://developers.google.com/identity/protocols/OAuth2ServiceAccount"&gt;here&lt;/a&gt; to understand more how the authorization process works or how you can use&amp;nbsp;it.&lt;/p&gt;
&lt;h2&gt;Materials and Methods&lt;a id="materials"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;The simplest tool to install the needed modules is &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install gspread oauth2client&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Following the &lt;a href="#install-crypto"&gt;note&lt;/a&gt;, you would also want to install &lt;code&gt;pycrypto&lt;/code&gt; or &lt;code&gt;pyopenssl&lt;/code&gt;,&amp;nbsp;e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install pycrypto&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Experiment&lt;/h3&gt;
&lt;h3&gt;Create signed &lt;span class="caps"&gt;JSON&lt;/span&gt; Web Tokens&amp;nbsp;(JWTs)&lt;/h3&gt;
&lt;p&gt;The gspread documentation explains how to create Google OAuth2.0 &lt;span class="caps"&gt;JSON&lt;/span&gt; Web Tokens (JWTs) &lt;a href="http://gspread.readthedocs.org/en/latest/oauth2.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow his full instructions on the &lt;a href="https://console.developers.google.com/project"&gt;Google Developers Console&lt;/a&gt; web site to create a service account Client &lt;span class="caps"&gt;ID&lt;/span&gt; &lt;span class="caps"&gt;JSON&lt;/span&gt; file. I will call the file &lt;code&gt;gspread-test.json&lt;/code&gt; from now&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;After saving &lt;code&gt;gspread-test.json&lt;/code&gt; you need to &lt;strong&gt;share your document with the given email in the &lt;code&gt;client_email&lt;/code&gt; field&lt;/strong&gt; of the file. Otherwise you’ll get a &lt;code&gt;SpreadsheetNotFound&lt;/code&gt; exception when trying to open&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The resulting &lt;span class="caps"&gt;JSON&lt;/span&gt; file is a secure authorization key for any spreadsheet you may want to. For this reason you should hide this file should as it could be used to do nasty things against your spreadsheets. Please follow more comments on this in the &lt;a href="#discussion"&gt;discussion&lt;/a&gt;&amp;nbsp;section.&lt;/p&gt;
&lt;h3&gt;Sign your JWTs for&amp;nbsp;credentials&lt;/h3&gt;
&lt;p&gt;This is a snippet of how to obtain the data of a spreadsheet given its name in the variable &lt;code&gt;wks&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;gspread&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;oauth2client.service_account&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ServiceAccountCredentials&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;json_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gspread-test.json&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://spreadsheets.google.com/feeds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;credentials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ServiceAccountCredentials&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_json_keyfile_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;google_api_key_file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;gc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gspread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;wks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Where is the money Lebowski?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheet1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;gc&lt;/code&gt; object is a &lt;code&gt;gspread.client.Client&lt;/code&gt;, check its main functionality &lt;a href="http://gspread.readthedocs.org/en/latest/index.html#main-interface"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find &lt;a href="http://gspread.readthedocs.org/en/latest/index.html#models"&gt;here&lt;/a&gt; the main functionality of &lt;code&gt;wks&lt;/code&gt; is a &lt;span class="caps"&gt;GS&lt;/span&gt;&amp;nbsp;class.&lt;/p&gt;
&lt;p&gt;&lt;a id="install-crypto"&gt;&lt;/a&gt;
&lt;strong&gt;Note:&lt;/strong&gt; You must create the signed credentials using &lt;code&gt;ServiceAccountCredentials&lt;/code&gt; from &lt;code&gt;oauth2client.service_account&lt;/code&gt;.
This class requires either &lt;code&gt;PyOpenSSL&lt;/code&gt;, or &lt;code&gt;PyCrypto 2.6&lt;/code&gt; or later. If you are getting &lt;code&gt;CryptoUnavailableError&lt;/code&gt; when trying to create your signed credentials, install &lt;a href="https://github.com/pyca/pyopenssl"&gt;PyOpenSSL&lt;/a&gt; or &lt;a href="https://github.com/dlitz/pycrypto"&gt;PyCrypto&lt;/a&gt;,&amp;nbsp;e.g.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install pycrypto&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;Have a look at the possibilities you have with gspread &lt;a href="https://github.com/burnash/gspread#more-examples"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some examples&amp;nbsp;here:&lt;/p&gt;
&lt;h4&gt;Opening a&amp;nbsp;Spreadsheet&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# You can open a spreadsheet by its title as it appears in Google Docs&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My poor gym results&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- Look ma, no keys!&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# If you want to be specific, use a key (which you can extract from&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# the spreadsheet&amp;#39;s url)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sht1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_by_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0BmgG6nO_6dprdS1MN3d3MkdPa142WFRrdnRRUWl1UFE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Or, if you feel lazy to extract that key, paste the entire url&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sht2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_by_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://docs.google.com/spreadsheet/ccc?key=0Bm...FE&amp;amp;hl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Selecting a&amp;nbsp;worksheet&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Select worksheet by index. Worksheet indexes start from zero&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;worksheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_worksheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# By title&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;worksheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;January&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Most common case: Sheet1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;worksheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sheet1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Get a list of all worksheets&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;worksheet_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;worksheets&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Creating a&amp;nbsp;worksheet&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;worksheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_worksheet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;A worksheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Getting a cell&amp;nbsp;value&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# With label&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;acell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# With coords&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Getting all values from a worksheet as a list of&amp;nbsp;lists&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;list_of_lists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_all_values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Discussion&lt;a id="discussion"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Regarding security issues, it is not clear to me how we should &amp;#8216;hide&amp;#8217; the &lt;span class="caps"&gt;JSON&lt;/span&gt; key information in case we needed to distribute the Python applications created. In a compiled language it would be possible to put the content in a file, obfuscate it, encrypt it and then compile it. Of course we could do this on Python using, for instance, Cython, but I would like something simpler and I think there isn&amp;#8217;t one.
&lt;em&gt;If you have any suggestion on how to do this in a pure Python package, please send me an&amp;nbsp;email.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/spreadsheets/"&gt;https://docs.google.com/spreadsheets/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://support.google.com/docs"&gt;https://support.google.com/docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://support.google.com/docs/table/25273?hl=en"&gt;https://support.google.com/docs/table/25273?hl=en&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/burnash/gspread"&gt;https://github.com/burnash/gspread&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/OAuth"&gt;http://en.wikipedia.org/wiki/OAuth&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2#serviceaccount"&gt;https://developers.google.com/identity/protocols/OAuth2#serviceaccount&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://tools.ietf.org/html/rfc6749"&gt;http://tools.ietf.org/html/rfc6749&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2"&gt;https://developers.google.com/identity/protocols/OAuth2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/google/oauth2client"&gt;https://github.com/google/oauth2client&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/identity/protocols/OAuth2ServiceAccount"&gt;https://developers.google.com/identity/protocols/OAuth2ServiceAccount&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://gspread.readthedocs.org/en/latest/oauth2.html"&gt;http://gspread.readthedocs.org/en/latest/oauth2.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://console.developers.google.com/project"&gt;https://console.developers.google.com/project&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://gspread.readthedocs.org/en/latest/index.html#main-interface"&gt;http://gspread.readthedocs.org/en/latest/index.html#main-interface&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://gspread.readthedocs.org/en/latest/index.html#models"&gt;http://gspread.readthedocs.org/en/latest/index.html#models&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pyca/pyopenssl"&gt;https://github.com/pyca/pyopenssl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dlitz/pycrypto"&gt;https://github.com/dlitz/pycrypto&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/burnash/gspread#more-examples"&gt;https://github.com/burnash/gspread#more-examples&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="python"></category><category term="gspread"></category><category term="google"></category><category term="authentication"></category></entry><entry><title>Install Bokeh from sources</title><link href="https://alexsavio.github.io/quick-bokeh.html" rel="alternate"></link><published>2014-11-11T22:11:46+01:00</published><updated>2014-11-11T22:11:46+01:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-11-11:/quick-bokeh.html</id><summary type="html">&lt;p&gt;A short guide to install Bokeh from sources in a virtualenv on Ubuntu&amp;nbsp;14.04&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Bokeh is a Python interactive visualization library that targets modern web browsers for presentation. You can find its home at&amp;nbsp;http://bokeh.pydata.org/&lt;/p&gt;
&lt;p&gt;There is a great gallery here:&amp;nbsp;http://bokeh.pydata.org/docs/gallery.html#gallery&lt;/p&gt;
&lt;h1&gt;Requirements&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo apt-get install nodejs npm redis-server&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; activate your virtualenv now, if you&amp;nbsp;wish.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install numpy&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;pip install flask redis requests pandas wsaccel ujson cython&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;gevent&lt;/h2&gt;
&lt;h3&gt;Python&amp;nbsp;2.7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install gevent&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Python&amp;nbsp;3.4&lt;/h3&gt;
&lt;p&gt;The current version of gevent at https://github.com/gevent/gevent is not compatible with Python 3 yet.
Luckily there is a fork of gevent patched to work with Python&amp;nbsp;3:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fantix&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gevent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;gevent&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;gevent-websocket&lt;/h2&gt;
&lt;h3&gt;Python&amp;nbsp;2.7&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install gevent-websocket&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Python&amp;nbsp;3.4&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;hg clone https://bitbucket.org/Jeffrey/gevent-websocket&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;cd gevent-websocket&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;python setup.py install&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Clone Bokeh&amp;nbsp;repository&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;git clone https://github.com/bokeh/bokeh.git&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;BokehJS&lt;/h2&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd bokeh/bokehjs&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;npm install&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Grunt, the javascript task&amp;nbsp;runner&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo npm install -g grunt-cli&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Deploy&lt;/h3&gt;
&lt;p&gt;Generate the compiled and optimized BokehJS libraries, and deploy them to the build&amp;nbsp;subdirectory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;grunt deploy&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Build&lt;/h3&gt;
&lt;p&gt;This will build the BokehJS sources without concatenating and optimizing into standalone&amp;nbsp;libraries.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;grunt build&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point you can use BokehJS together with require.js as an &lt;span class="caps"&gt;AMD&lt;/span&gt;&amp;nbsp;module.&lt;/p&gt;
&lt;h1&gt;Install&amp;nbsp;Bokeh&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd &amp;lt;wherever_is&amp;gt;/bokeh&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;python setup.py install&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This instruction will first ask if you want (1) a newly built BokehJS or (2) the build you just did in the &lt;strong&gt;bokehjs&lt;/strong&gt; folder. Choose&amp;nbsp;2.&lt;/p&gt;
&lt;h1&gt;Documentation&lt;/h1&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install docutils sphinx sphinxcontrib-napoleon sphinx_bootstrap_theme sphinxcontrib-httpdomain&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Download sample&amp;nbsp;data&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import bokeh; bokeh.sampledata.download()&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Build&amp;nbsp;html&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd &amp;lt;wherever_is&amp;gt;/bokeh/sphinx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;make html&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://bokeh.pydata.org/docs/installation.html"&gt;http://bokeh.pydata.org/docs/installation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="python"></category><category term="plots"></category><category term="install"></category></entry><entry><title>How to use Byobu</title><link href="https://alexsavio.github.io/how-to-byobu.html" rel="alternate"></link><published>2014-07-06T10:00:00+02:00</published><updated>2014-07-06T10:00:00+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-07-06:/how-to-byobu.html</id><summary type="html">&lt;p&gt;A short manual for Byobu and a list of its&amp;nbsp;advantages.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://byobu.co"&gt;Byobu&lt;/a&gt;, in the same way as &lt;a href="http://tmux.sourceforge.net/"&gt;tmux&lt;/a&gt;, allows to
manage many terminals through just one. In summary, it is a terminal-based terminal multiplexer and session&amp;nbsp;manager.&lt;/p&gt;
&lt;p&gt;It can be very helpful when working with a server through &lt;span class="caps"&gt;SSH&lt;/span&gt;. Instead of opening a terminal
and connecting to your server every time you nedd another terminal, you can
setup your server to run Byobu or tmux at the beginning of your session and have as many terminals as you need. Byobu also keeps terminal sessions alive after detaching from&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Byobu is an enhancement that connects to and uses Screen or tmux (you choose), but offers useful statistics and easy-to-use hotkeys for the basic&amp;nbsp;commands.&lt;/p&gt;
&lt;h2&gt;Installing&amp;nbsp;Byobu&lt;/h2&gt;
&lt;p&gt;In&amp;nbsp;Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;apt-get install byobu.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Else take a look at &lt;a href="http://byobu.co/downloads.html"&gt;http://byobu.co/downloads.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Start&amp;nbsp;Byobu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;byobu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Configure Ubuntu to run Byobu from the&amp;nbsp;beginning&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;byobu-config&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Feel free to change&amp;nbsp;anything.&lt;/p&gt;
&lt;p&gt;The important setting to change is: &amp;#8220;&lt;em&gt;Byobu currently launches at login (toggle on)&lt;/em&gt;&amp;#8220;. Select that and press&amp;nbsp;return.&lt;/p&gt;
&lt;p&gt;Now you can go back to the menu and exit byobu-config (tab to the exit choice and hit&amp;nbsp;return).&lt;/p&gt;
&lt;h2&gt;Resume previous&amp;nbsp;sessions&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;byobu –r session_title&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Hotkeys&lt;/h2&gt;
&lt;p&gt;Byobu has easy keybindings that use the function&amp;nbsp;keys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;F2&lt;/strong&gt;: Create a new&amp;nbsp;window&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F3&lt;/strong&gt;: Move to previous&amp;nbsp;window&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F4&lt;/strong&gt;: Move to next&amp;nbsp;window&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F5&lt;/strong&gt;: Reload&amp;nbsp;profile&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F6&lt;/strong&gt;: Detach from this&amp;nbsp;session&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F7&lt;/strong&gt;: Enter copy/scrollback&amp;nbsp;mode&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F8&lt;/strong&gt;: Re-title a&amp;nbsp;window&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F9&lt;/strong&gt;: Configuration Menu, can also be summoned by &lt;strong&gt;Ctrl+a&lt;/strong&gt;, &lt;strong&gt;Ctrl+@&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F12&lt;/strong&gt;: Lock current&amp;nbsp;session&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;How detaching works or How to maintain a&amp;nbsp;session&lt;/h2&gt;
&lt;p&gt;Perform a short demo. Issue the&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; hello&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now exit the session by pressing &lt;strong&gt;F6&lt;/strong&gt; to detach from Byobu and then run: &lt;em&gt;exit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Now &lt;span class="caps"&gt;SSH&lt;/span&gt; back into your machine.
You can notice that the &lt;em&gt;echo hello&lt;/em&gt; command is still on the&amp;nbsp;screen.&lt;/p&gt;
&lt;p&gt;Detaching does not end your session, it gives you access to another session.
That means you can log in, run a long running task, and then detach and come back later when you;ve finished the&amp;nbsp;task.&lt;/p&gt;
&lt;h2&gt;Note for vim&amp;nbsp;users:&lt;/h2&gt;
&lt;p&gt;You might find now a strange behaviour when using &lt;strong&gt;Ctrl-Left&lt;/strong&gt; and &lt;strong&gt;Ctrl-Right&lt;/strong&gt; keys to skip words using vim and also other&amp;nbsp;programs.&lt;/p&gt;
&lt;p&gt;The best solution I found&amp;nbsp;was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;:set term=xterm&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.vim/vimrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;unbind-key -n C-Left&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.byobu/keybindings.tmux&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;unbind-key -n C-Right&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.byobu/keybindings.tmux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;set-window-option -g xterm-keys on&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.byobu/.tmux.conf&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;set -g terminal-overrides &amp;#39;xterm*:smcup@:rmcup@&amp;#39;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.byobu/.tmux.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href="http://www.saltycrane.com/blog/2012/10/how-start-long-running-process-screen-and-detach-it/"&gt;http://www.saltycrane.com/blog/2012/10/how-start-long-running-process-screen-and-detach-it/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a href="http://tmux.sourceforge.net/"&gt;http://tmux.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3] &lt;a href="http://byobu.co/documentation.html"&gt;http://byobu.co/documentation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4] &lt;a href="http://www.howtogeek.com/58487/how-to-easily-multitask-in-a-linux-terminal-with-byobu/"&gt;http://www.howtogeek.com/58487/how-to-easily-multitask-in-a-linux-terminal-with-byobu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[5] &lt;a href="http://blog.smartlogicsolutions.com/2010/01/22/ubuntu-byobu-landscape/"&gt;http://blog.smartlogicsolutions.com/2010/01/22/ubuntu-byobu-landscape/&lt;/a&gt;&lt;/p&gt;</content><category term="SysAdmin"></category><category term="terminal"></category><category term="config"></category><category term="ssh"></category><category term="multi-tasking"></category></entry><entry><title>How to set up different versions of GCC</title><link href="https://alexsavio.github.io/setup-gcc-versions.html" rel="alternate"></link><published>2014-06-03T11:00:00+02:00</published><updated>2014-06-03T11:00:00+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-06-03:/setup-gcc-versions.html</id><summary type="html">&lt;p&gt;How to set up different versions of &lt;span class="caps"&gt;GCC&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I need to change versions of software I use on Ubuntu, e.g., gcc and g++ and&amp;nbsp;Java.&lt;/p&gt;
&lt;h3&gt;Update-alternatives&lt;/h3&gt;
&lt;p&gt;A neat way to do it is using &lt;em&gt;update-alternatives&lt;/em&gt;. This how you have to do it with&amp;nbsp;gcc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.6&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 40 --slave /usr/bin/g++ g++ /usr/bin/g++-4.7&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;sudo update-alternatives --config gcc&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href="http://charette.no-ip.com:81/programming/2011-12-24_GCCv47/"&gt;http://charette.no-ip.com:81/programming/2011-12-24_GCCv47/&lt;/a&gt;&lt;/p&gt;</content><category term="Ubuntu"></category><category term="ubuntu"></category><category term="gcc"></category><category term="config"></category><category term="update-alternatives"></category></entry><entry><title>Installing common Python data analysis tools in virtualenv</title><link href="https://alexsavio.github.io/data-analysis-tools-install.html" rel="alternate"></link><published>2014-04-26T18:38:37+02:00</published><updated>2014-04-26T18:38:37+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-04-26:/data-analysis-tools-install.html</id><summary type="html">&lt;p&gt;Installing Python data analysis&amp;nbsp;tools&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tested on Ubuntu 13.10 and&amp;nbsp;14.04.&lt;/p&gt;
&lt;h3&gt;Install needed&amp;nbsp;packages:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;virtualenv&lt;/span&gt; &lt;span class="n"&gt;virtualenvwrapper&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;export WORKON_HOME=~/envs&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;source /usr/local/bin/virtualenvwrapper.sh&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;export PIP_REQUIRE_VIRTUALENV=true&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create a virtual&amp;nbsp;environment&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mkvirtualenv&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;env_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;path_to_python&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;*&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;path_to_python&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;either&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python2&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;whatever&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install&amp;nbsp;modules&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://ipython.org/"&gt;IPython&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.numpy.org/"&gt;Numpy&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install numpy&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Test&amp;nbsp;numpy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;nose&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import numpy; numpy.test()&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://cython.org/"&gt;Cython&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install cython&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.scipy.org/"&gt;Scipy&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scipy&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libblas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="n"&gt;liblapack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;scipy&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://docs.python.org/3.3/library/readline.html"&gt;Readline&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libncurses5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;readline&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Other&amp;nbsp;dependencies&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install python-dateutil sphinx pygments tornado&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Graphical libraries for &lt;span class="caps"&gt;GUI&lt;/span&gt; building and IPython &lt;span class="caps"&gt;QT&lt;/span&gt;&amp;nbsp;console&lt;/h3&gt;
&lt;h4&gt;You can either install them inside the virtual&amp;nbsp;environment:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; pip install pyside&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You must install PyQt4&amp;nbsp;globally:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; sudo apt-get install python3-pyqt4 python3-sip python-qt4-dev&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; sudo apt-get install python-pyqt4 python-sip python-qt4-dev&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;I recommend installing them globally then linking from the virtual&amp;nbsp;environment:&lt;/h4&gt;
&lt;p&gt;First install&amp;nbsp;them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo apt-get install python3-pyqt4 python3-pyside python3-sip&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo apt-get install python-qt4 python-pyside python-sip python-qt4-dev&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then link them (with the virtualenv&amp;nbsp;activated):&lt;/p&gt;
&lt;p&gt;In [3] we can see a script to link any library to the virtual environment (save
it in, e.g. symlink_pyqt4_and_sip.sh or ${WORKON_HOME}/postmkvirtualenv and
execute&amp;nbsp;it):&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/span&gt;
&lt;span class="code-line"&gt;22&lt;/span&gt;
&lt;span class="code-line"&gt;23&lt;/span&gt;
&lt;span class="code-line"&gt;24&lt;/span&gt;
&lt;span class="code-line"&gt;25&lt;/span&gt;
&lt;span class="code-line"&gt;26&lt;/span&gt;
&lt;span class="code-line"&gt;27&lt;/span&gt;
&lt;span class="code-line"&gt;28&lt;/span&gt;
&lt;span class="code-line"&gt;29&lt;/span&gt;
&lt;span class="code-line"&gt;30&lt;/span&gt;
&lt;span class="code-line"&gt;31&lt;/span&gt;
&lt;span class="code-line"&gt;32&lt;/span&gt;
&lt;span class="code-line"&gt;33&lt;/span&gt;
&lt;span class="code-line"&gt;34&lt;/span&gt;
&lt;span class="code-line"&gt;35&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# This hook is executed after a new virtualenv is activated.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ~/.virtualenvs/postmkvirtualenv&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;function&lt;/span&gt; find_real_lib &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;syspy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;libname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;syspath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$syspy&lt;/span&gt; -c &lt;span class="s2"&gt;&amp;quot;import sys; print(&amp;#39; &amp;#39;.join(sys.path).strip())&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; libdir in &lt;span class="nv"&gt;$syspath&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="nv"&gt;$libdir&lt;/span&gt;/&lt;span class="nv"&gt;$libname&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$3&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$libdir&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$libname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;libs&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; PyQt4 sip.so PySide sip.cpython-34m-x86_64-linux-gnu.so &lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#other_libs = ( vtk cairo )&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;python_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;python&lt;span class="k"&gt;$(&lt;/span&gt;python -c &lt;span class="s2"&gt;&amp;quot;import sys; print (str(sys.version_info[0])+&amp;#39;.&amp;#39;+str(sys.version_info[1]))&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;which -a &lt;span class="nv"&gt;$python_version&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;syspy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="p"&gt;[-1]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;get_python_lib_cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;from distutils.sysconfig import get_python_lib; print (get_python_lib())&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;lib_virtualenv_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;python -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$get_python_lib_cmd&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; lib in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;libs&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;libsyspath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    find_real_lib &lt;span class="nv"&gt;$syspy&lt;/span&gt; &lt;span class="nv"&gt;$lib&lt;/span&gt; libsyspath&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        ln -s &lt;span class="nv"&gt;$libsyspath&lt;/span&gt; &lt;span class="nv"&gt;$lib_virtualenv_path&lt;/span&gt;/&lt;span class="nv"&gt;$lib&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Other interesting&amp;nbsp;modules&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://matplotlib.org/"&gt;matplotlib&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pyparsing&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://scikit-image.org/"&gt;scikit-image&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install scikit-image&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://scikit-learn.org"&gt;scikit-learn&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install scikit-learn&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/scikit-fuzzy/scikit-fuzzy"&gt;scikit-fuzzy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libhdf5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;numexpr&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;tables&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have problems importing tables, it might help downloading and compiling the &lt;a href="http://www.hdfgroup.org/HDF5/release/obtainsrc.html"&gt;&lt;span class="caps"&gt;HDF5&lt;/span&gt; library&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install pandas&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.h5py.org/"&gt;h5py&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libhdf5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;h5py&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://patsy.readthedocs.org/en/latest/"&gt;patsy&lt;/a&gt; and &lt;a href="http://statsmodels.sourceforge.net/"&gt;statsmodels&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install patsy&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;pip install statsmodels&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://pymc-devs.github.io/pymc/"&gt;pymc&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install pymc&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Speed up&amp;nbsp;execution&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/Bottleneck"&gt;bottleneck&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install bottleneck&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/twiecki/CythonGSL"&gt;cythongsl&lt;/a&gt;
 &lt;a href="http://nbviewer.ipython.org/github/twiecki/CythonGSL/blob/master/examples/cython_gsl_ipythonnb.ipynb"&gt;cythongsl-demo&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install cythongsl&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Neuroscience&amp;nbsp;tools:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://nipy.org/nibabel/"&gt;Nibabel&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install nibabel&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://nipy.org/"&gt;Nipy&lt;/a&gt;&amp;nbsp;Dependencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;sphinx&lt;/span&gt; &lt;span class="n"&gt;sympy&lt;/span&gt; &lt;span class="n"&gt;networkx&lt;/span&gt; &lt;span class="n"&gt;traits&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;nipy&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;nipype&lt;/span&gt; &lt;span class="n"&gt;dipy&lt;/span&gt; &lt;span class="n"&gt;nitime&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.cs.dartmouth.edu/~nfoti/blog/blog/2012/07/17/setting-up-
virtualenv-for-data-analysis-on-osx/"&gt;http://www.cs.dartmouth.edu/~nfoti/blog/blog/2012/07/17/setting-up-&amp;nbsp;virtualenv-for-data-analysis-on-osx/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://calvinx.com/2012/11/03/ipython-qtconsole/"&gt;http://calvinx.com/2012/11/03/ipython-qtconsole/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/alexsavio/7580457"&gt;https://gist.github.com/alexsavio/7580457&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="python"></category><category term="virtualenv"></category><category term="data"></category></entry><entry><title>Compile Numpy and Scipy against Intel MKL</title><link href="https://alexsavio.github.io/numpy_scipy_mkl.html" rel="alternate"></link><published>2014-04-08T22:00:00+02:00</published><updated>2014-04-08T22:00:00+02:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-04-08:/numpy_scipy_mkl.html</id><summary type="html">&lt;p&gt;Numpy and Scipy on Intel &lt;span class="caps"&gt;MKL&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h6&gt;Tested on Ubuntu 13.10 and&amp;nbsp;14.04&lt;/h6&gt;
&lt;h3&gt;1. Install C++ Composer and &lt;span class="caps"&gt;FORTRAN&lt;/span&gt; Composer, with &lt;span class="caps"&gt;MKL&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Fill forms and download online installation shell scripts from &lt;a href="http://software.intel.com/en-us/non-commercial-software-development"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;OpenBLAS&amp;nbsp;Note&lt;/h4&gt;
&lt;p&gt;If you want to use OpenBLAS as well, install it and follow the OpenBLAS notes along this tutorial.
  I haven&amp;#8217;t tested this&amp;nbsp;yet.&lt;/p&gt;
&lt;p&gt;But first, install&amp;nbsp;it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;git clone git://github.com/xianyi/OpenBLAS&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; OpenBLAS &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class="nv"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gfortran&lt;/span&gt;
&lt;span class="code-line"&gt;sudo make &lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/OpenBLAS install&lt;/span&gt;
&lt;span class="code-line"&gt;sudo ldconfig&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Execute shell scripts with&amp;nbsp;sudo&lt;/h3&gt;
&lt;p&gt;I will assume you&amp;#8217;ll install the libraries in&amp;nbsp;/opt/intel.&lt;/p&gt;
&lt;h3&gt;3. Once installed, add this to&amp;nbsp;~/.bashrc&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Intel C++ Studio&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -d /opt/intel &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;INTEL_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/intel&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INTEL_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/bin&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/intel/mkl/lib/intel64:/opt/intel/lib/intel64:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add this to&amp;nbsp;/etc/ld.so.conf.d/intel.conf:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;/opt/intel/lib/intel64&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;/opt/intel/lib/intel64/irml&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;/opt/intel/lib/intel64/crt&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;/opt/intel/mkl/lib/intel64&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5. Download Numpy and Scipy from &lt;a href="http://www.scipy.org/scipylib/download.html"&gt;here&lt;/a&gt;&lt;/h3&gt;
&lt;h3&gt;6. Change Numpy source&amp;nbsp;code:&lt;/h3&gt;
&lt;p&gt;Change directory to&amp;nbsp;numpy-x.x.x&lt;/p&gt;
&lt;p&gt;Create a site.cfg from the existing&amp;nbsp;site.cfg.examle&lt;/p&gt;
&lt;p&gt;Edit site.cfg as&amp;nbsp;follows:&lt;/p&gt;
&lt;p&gt;Add the following lines to site.cfg in your top level NumPy directory to use Intel® &lt;span class="caps"&gt;MKL&lt;/span&gt;, if you are building on Intel 64 platform, assuming the default path for the Intel &lt;span class="caps"&gt;MKL&lt;/span&gt; installation from the Intel Parallel Studio &lt;span class="caps"&gt;XE&lt;/span&gt; 2013 or Intel Composer &lt;span class="caps"&gt;XE&lt;/span&gt; 2013&amp;nbsp;versions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mkl]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;library_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/intel/mkl/lib/intel64&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;include_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/intel/mkl/include&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;mkl_libs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;mkl_rt&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;lapack_libs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are building NumPy for 32 bit, please add as the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mkl]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;library_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/intel/mkl/lib/ia32&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;include_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/intel/mkl/include&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;mkl_libs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;mkl_rt&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;lapack_libs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change cc_exe in numpy/distutils/intelccompiler.py to be something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cc_exe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \&lt;span class="s1"&gt;&amp;#39;icc -O3 -g -fPIC -fp-model strict -fomit-frame-pointer -openmp -xhost&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we use, -O3, optimizations for speed and enables more aggressive loop transformations such as Fusion, Block-Unroll-and-Jam, and collapsing &lt;span class="caps"&gt;IF&lt;/span&gt; statements, -openmp for OpenMP threading and -xhost option tells the compiler to generate instructions for the highest instruction set available on the compilation host processor. If you are using the &lt;span class="caps"&gt;ILP64&lt;/span&gt; interface, please add -DMKL_ILP64 compiler&amp;nbsp;flag.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;icc --help&lt;/code&gt; for more information on processor-specific options, and refer Intel Compiler documentation for more details on the compiler&amp;nbsp;flags.&lt;/p&gt;
&lt;p&gt;Change the Fortran compiler flags in numpy-x.x.x/numpy/distutil/fcompiler/intel.py to use the following compiler options for the Intel Fortran&amp;nbsp;Compiler:&lt;/p&gt;
&lt;p&gt;For ia32 and&amp;nbsp;Intel64&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;ifort -xhost -openmp -fp-model strict -fPIC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change the get_flags_opt function line&amp;nbsp;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-xhost -openmp -fp-model strict&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you are using &lt;span class="caps"&gt;ILP64&lt;/span&gt; interface of Intel &lt;span class="caps"&gt;MKL&lt;/span&gt;, please add -i8 flag above.  If you are using older versions of Numpy/SciPy, please refer the new intel.py for your reference from the latest version of NumPy, which you can replace to use the above mentioned compiler&amp;nbsp;options.&lt;/p&gt;
&lt;h4&gt;OpenBLAS&amp;nbsp;Note&lt;/h4&gt;
&lt;p&gt;To use OpenBLAS, uncomment the following lines and correct the&amp;nbsp;paths:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[openblas]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;libraries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;openblas&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;library_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/OpenBLAS/lib&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="na"&gt;include_dirs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/opt/OpenBLAS/include&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;7. Check your&amp;nbsp;config&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd &amp;lt;numpy-x.x.x&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;python setup.py config&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see the &lt;span class="caps"&gt;MKL&lt;/span&gt; library paths, and OpenBLAS if you enabled&amp;nbsp;it.&lt;/p&gt;
&lt;h3&gt;8. Compile Numpy and Scipy with the following command (once for Numpy and then once for&amp;nbsp;Scipy):&lt;/h3&gt;
&lt;p&gt;Remember to activate the virtual environment if you are going to use this in&amp;nbsp;one.&lt;/p&gt;
&lt;h4&gt;8.1 For&amp;nbsp;64-bit:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;numpy-x.x.x&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;python setup.py config --compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem build_clib &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;--compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem build_ext --compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem install&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;scipy-x.x.x&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;python setup.py config --compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem build_clib &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;--compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem build_ext --compiler&lt;span class="o"&gt;=&lt;/span&gt;intelem --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intelem install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;8.2 For&amp;nbsp;32-bit:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;numpy-x.x.x&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;python setup.py config --compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel build_clib &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;--compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel build_ext --compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel install&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;scipy-x.x.x&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;python setup.py config --compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel build_clib &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;--compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel build_ext --compiler&lt;span class="o"&gt;=&lt;/span&gt;intel --fcompiler&lt;span class="o"&gt;=&lt;/span&gt;intel install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;9.&amp;nbsp;Troubleshooting:&lt;/h3&gt;
&lt;h4&gt;9.1 Compiling Scipy: &amp;#8220;Using deprecated NumPy &lt;span class="caps"&gt;API&lt;/span&gt;, disable it&amp;nbsp;by&amp;#8230;&amp;#8221;&lt;/h4&gt;
&lt;p&gt;Thi may be because of the version of &lt;span class="caps"&gt;GCC&lt;/span&gt;, try using 4.7 (worked in November&amp;nbsp;2013):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install gcc-4.7&lt;/span&gt;
&lt;span class="code-line"&gt;sudo rm /usr/bin/gcc&lt;/span&gt;
&lt;span class="code-line"&gt;sudo ln -s /usr/bin/gcc-4.7 /usr/bin/gcc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Compile both Numpy and Scipy&amp;nbsp;again.&lt;/p&gt;
&lt;h3&gt;10.&amp;nbsp;Testing&lt;/h3&gt;
&lt;p&gt;You can test OpenBLAS with the following code (got from &lt;a href="https://gist.github.com/osdf/"&gt;https://gist.github.com/osdf/&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;timeit&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy.core._dotblas&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FAST BLAS&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;slow blas&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;version:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;maxint:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxint&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;setup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;import numpy; x = numpy.random.random((1000,1000))&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numpy.dot(x, x.T)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dot:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sec&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl"&gt;https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://gehrcke.de/2014/02/building-numpy-and-scipy-with-intel-compilers-and-intel-mkl-on-a-64-bit-machine/"&gt;http://gehrcke.de/2014/02/building-numpy-and-scipy-with-intel-compilers-and-intel-mkl-on-a-64-bit-machine/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/11443302/compiling-numpy-with-openblas-integration"&gt;http://stackoverflow.com/questions/11443302/compiling-numpy-with-openblas-integration&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gist.githubusercontent.com/osdf/3842524/raw/df01f7fa9d849bec353d6ab03eae0c1ee68f1538/test_numpy.py"&gt;https://gist.githubusercontent.com/osdf/3842524/raw/df01f7fa9d849bec353d6ab03eae0c1ee68f1538/test_numpy.py&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="Numpy"></category><category term="Scipy"></category><category term="MKL"></category><category term="Python"></category><category term="OpenBLAS"></category></entry><entry><title>Using BibLatex with Lyx and JabRef</title><link href="https://alexsavio.github.io/biblatex_lyx_jabref_encoding.html" rel="alternate"></link><published>2014-02-27T18:11:46+01:00</published><updated>2014-02-27T18:11:46+01:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-02-27:/biblatex_lyx_jabref_encoding.html</id><summary type="html">&lt;p&gt;Configuring BibLatex in Lyx to benefit of &lt;span class="caps"&gt;UTF&lt;/span&gt;-8&amp;nbsp;encoding&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;For publishing articles with Lyx I&amp;#8217;ve used Zotero, JabRef and Lyx during my PhD.
I&amp;#8217;ve always had problems with the encoding of the BibTex files and ended up
editing them in JabRef, removing/replacing strange&amp;nbsp;characters.&lt;/p&gt;
&lt;p&gt;Today my beloved girlfriend (are you happy now?) indicated me
&lt;a href="http://www.ctan.org/pkg/biblatex"&gt;BibLatex&lt;/a&gt;.
She showed me that we can configure Lyx to use it through
&lt;a href="http://biblatex-biber.sourceforge.net/"&gt;biber&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a list of steps that you should perform to be able to use BibLatex on&amp;nbsp;Lyx.&lt;/p&gt;
&lt;h3&gt;Step 1: Reconfigure encodings in Zotero and&amp;nbsp;JabRef&lt;/h3&gt;
&lt;p&gt;Setup Zotero to export to &lt;span class="caps"&gt;UTF&lt;/span&gt;-8.&lt;/p&gt;
&lt;p&gt;Setup JabRef to use the default encoding as &lt;span class="caps"&gt;UTF&lt;/span&gt;-8.&lt;/p&gt;
&lt;h3&gt;Step 2: Install biblatex and&amp;nbsp;biber&lt;/h3&gt;
&lt;p&gt;In Ubuntu I installed the packages: &lt;em&gt;biblatex texlive-latex-extra&amp;nbsp;texlive-bibtex-extra&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Step 3: Create the biblatex.module&amp;nbsp;file&lt;/h3&gt;
&lt;p&gt;Create a file named biblatex.module with the following&amp;nbsp;content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;DeclareLyXModule&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Biblatex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;citation&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;styles&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;DescriptionBegin&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;prerequisite&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;biblatex&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;enables&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;year&lt;/span&gt; &lt;span class="n"&gt;citation&lt;/span&gt; &lt;span class="n"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;without&lt;/span&gt; &lt;span class="n"&gt;actually&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt; &lt;span class="n"&gt;natbib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;Biblatex&lt;/span&gt; &lt;span class="n"&gt;itself&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;loaded&lt;/span&gt; &lt;span class="n"&gt;manually&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Cf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;wiki&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lyx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BibTeX&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Biblatex&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;DescriptionEnd&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Format&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;biblatex&lt;/span&gt; &lt;span class="n"&gt;actually&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Provides&lt;/span&gt; &lt;span class="n"&gt;natbib&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Put the file biblatex.module in the layouts folder in your user directory
(Help→About LyX tells you where you can find this directory; in the latest versions of &lt;span class="caps"&gt;OSX&lt;/span&gt; the correct layouts folder is in the applications&amp;nbsp;folder).&lt;/p&gt;
&lt;p&gt;In Ubuntu:&amp;nbsp;~/.lyx&lt;/p&gt;
&lt;p&gt;Run Tools→Reconfigure, restart&amp;nbsp;LyX.&lt;/p&gt;
&lt;h3&gt;Step 4: Creating the .lyx&amp;nbsp;file&lt;/h3&gt;
&lt;h4&gt;Add the biblatex&amp;nbsp;module&lt;/h4&gt;
&lt;p&gt;Add to &amp;#8220;Selected&amp;#8221; the module &amp;#8220;Biblatex-citation-styles&amp;#8221; from&amp;nbsp;Document→Settings→Modules.&lt;/p&gt;
&lt;h4&gt;Load biblatex in the&amp;nbsp;preamble&lt;/h4&gt;
&lt;p&gt;In the document preamble (Document→Settings→Preamble) you have to load biblatex manually,&amp;nbsp;with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;\usepackage[natbib=true,style=numeric,backend=biber,maxnames=1, doi=true, url=false,bibencoding=utf8]{biblatex}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Load the bibliography in the&amp;nbsp;preamble&lt;/h4&gt;
&lt;p&gt;Load your bibliography database in the&amp;nbsp;preamble:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;\addbibresource{/home/alexandre/mybibs.bib}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You must load the databases must using \addbibresource&amp;nbsp;commands.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="http://mirrors.ctan.org/macros/latex/contrib/biblatex/doc/biblatex.pdf"&gt;biblatex documentation&lt;/a&gt; for further&amp;nbsp;options.&lt;/p&gt;
&lt;h4&gt;Set biber as the BibTex&amp;nbsp;processor&lt;/h4&gt;
&lt;p&gt;In  Document→Settings→Bibliography, set the Processor as&amp;nbsp;biber.&lt;/p&gt;
&lt;h4&gt;Load the bibliography in a&amp;nbsp;note&lt;/h4&gt;
&lt;p&gt;In the document, insert the BibTeX inset (Insert→List/&lt;span class="caps"&gt;TOC&lt;/span&gt;→BibTeX Bibliography&amp;#8230; ) in a LyX note or comment,
such that LyX finds the citations, but no \bibliography command is output to&amp;nbsp;LaTeX.&lt;/p&gt;
&lt;p&gt;It does not matter which style you chose here, so you can stick with &amp;#8220;plain&amp;#8221;.
To use the citation dialog, you&amp;#8217;ll have to choose the correct databases (i.e. those you loaded above in item&amp;nbsp;(3)).&lt;/p&gt;
&lt;p&gt;You must do this if you are going to use the citation dialog. I use JabRef to push the citations&amp;nbsp;instead.&lt;/p&gt;
&lt;h4&gt;Put the printbibliography&amp;nbsp;command&lt;/h4&gt;
&lt;p&gt;In the document, enter \printbibliography in &lt;span class="caps"&gt;ERT&lt;/span&gt; (TeX mode) at the place where you want the bibliography to&amp;nbsp;appear.&lt;/p&gt;
&lt;h4&gt;View the file in &lt;span class="caps"&gt;PDF&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;And this should do&amp;nbsp;it.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://wiki.lyx.org/BibTeX/Tips"&gt;http://wiki.lyx.org/BibTeX/Tips&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://wiki.lyx.org/BibTeX/Biblatex"&gt;http://wiki.lyx.org/BibTeX/Biblatex&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://wiki.lyx.org/BibTeX/BiblatexStyles"&gt;http://wiki.lyx.org/BibTeX/BiblatexStyles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The biblatex.module file: &lt;a href="http://wiki.lyx.org/uploads/BibTeX/biblatex.module"&gt;http://wiki.lyx.org/uploads/BibTeX/biblatex.module&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The bibtexall script: &lt;a href="http://wiki.lyx.org/uploads/BibTeX/bibtexall"&gt;http://wiki.lyx.org/uploads/BibTeX/bibtexall&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LaTex"></category><category term="latex"></category><category term="lyx"></category><category term="bibtex"></category></entry><entry><title>How to create virtualenvs with Virtualenvwrapper</title><link href="https://alexsavio.github.io/virtualenvwrapper.html" rel="alternate"></link><published>2014-02-08T21:16:14+01:00</published><updated>2014-02-08T21:16:14+01:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-02-08:/virtualenvwrapper.html</id><summary type="html">&lt;p&gt;Create virtualenvs with&amp;nbsp;virtualenvwrapper&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Virtualenv and&amp;nbsp;virtualenvwrapper&lt;/h2&gt;
&lt;p&gt;Install virtualenv and&amp;nbsp;virtualenvwrapper&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo apt-get install python3-pip&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;sudo pip3 install virtualenv virtualenvwrapper&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Virtualenvwrapper .bashrc&amp;nbsp;setup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;echo &amp;quot;export WORKON_HOME=~/envs&amp;quot; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;echo &amp;quot;source /usr/local/bin/virtualenvwrapper.sh&amp;quot; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;echo &amp;quot;export PIP_REQUIRE_VIRTUALENV=true&amp;quot; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;source ~/.bashrc&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Basic usage&amp;nbsp;commands&lt;/h2&gt;
&lt;p&gt;Create a&amp;nbsp;virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; mkvirtualenv &amp;lt;env name&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activate a&amp;nbsp;virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;  workon &amp;lt;env name&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install a package in the activated&amp;nbsp;virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install &amp;lt;package name&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go to its directory after activating&amp;nbsp;it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cdvirtualenv&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Set a working directory as a project of the&amp;nbsp;virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd &amp;lt;project dir&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;setvirtualenvproject $VIRTUAL_ENV $(pwd)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Get a list of the Python modules and versions installed in an activated&amp;nbsp;virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip freeze&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To deactivate a&amp;nbsp;virtualenv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;deactivate&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Run ipython within the&amp;nbsp;virtualenv:&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ipy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;\&lt;span class="s2"&gt;&amp;quot;python -c &amp;#39;import IPython;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;IPython.terminal.ipapp.launch_new_instance()&amp;#8217;&amp;#34;&amp;nbsp;ipy&lt;/p&gt;
&lt;h4&gt;Run ipython with other&amp;nbsp;options:&lt;/h4&gt;
&lt;p&gt;Add this to&amp;nbsp;.bashrc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ipy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;python -c &amp;#39;import IPython;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;IPython.terminal.ipapp.launch_new_instance()&amp;#8217;&amp;#8221;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;ipyqt&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import IPython;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;IPython.start_ipython([&amp;#8216;&amp;#8221;&amp;#8217;&amp;#8220;&amp;#8216;qtconsole&amp;#8217;&amp;#8221;&amp;#8217;&amp;#8221;&amp;#8217;]);&amp;#8217;&amp;nbsp;}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;ipynote&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import IPython; IPython.start_ipython([&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;notebook&amp;#39;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]);&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Another interesting&amp;nbsp;option:&lt;/h2&gt;
&lt;p&gt;Download a virtualenv&amp;nbsp;script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;wget https://raw.github.com/pypa/virtualenv/1.9.X/virtualenv.py&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Give it execution&amp;nbsp;permission:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;chmod +x virtualenv.py&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the&amp;nbsp;virtualenv:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;./virtualenv.py &amp;lt;env_name&amp;gt; -p &amp;lt;path_to_python&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;source &amp;lt;env_name&amp;gt;/bin/activate&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Python script shebang to use the&amp;nbsp;enviroment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;#!&amp;lt;env_name&amp;gt;/bin/python&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;span class="caps"&gt;REFERENCES&lt;/span&gt;:&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.virtualenv.org/en/latest/"&gt;http://www.virtualenv.org/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/"&gt;http://virtualenvwrapper.readthedocs.org/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html"&gt;http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cs.dartmouth.edu/~nfoti/blog/blog/2012/07/17/setting-up-virtualenv-
for-data-analysis-on-osx/"&gt;http://www.cs.dartmouth.edu/~nfoti/blog/blog/2012/07/17/setting-up-virtualenv-&amp;nbsp;for-data-analysis-on-osx/&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="python"></category><category term="virtualenv"></category><category term="install"></category></entry><entry><title>How to create a virtualenv for web development for Eve and MongoDB</title><link href="https://alexsavio.github.io/web%20virtualenv.html" rel="alternate"></link><published>2014-02-08T21:16:14+01:00</published><updated>2014-02-08T21:16:14+01:00</updated><author><name>Alexandre M. Savio</name></author><id>tag:alexsavio.github.io,2014-02-08:/web virtualenv.html</id><summary type="html">&lt;p&gt;Create a virtualenv with web development framework&amp;nbsp;Flask&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Installing Web development&amp;nbsp;frameworks&lt;/h2&gt;
&lt;p&gt;Create virtualenv for Sands (python&amp;nbsp;2.7.5)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;mkvirtualenv -p /usr/bin/python2.7 myweb&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that you are using the virtualenv: (myweb) in the beggining of the shell&amp;nbsp;line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;First set of tools (en&amp;nbsp;masse):&lt;/h4&gt;
&lt;p&gt;Create&amp;nbsp;requirements.txt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Cerberus&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Eve&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Events&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Bootstrap&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Login&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Mail&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-MongoRest&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Principal&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-PyMongo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Restless&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-SSLify&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Script&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-Security&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Flask-WTF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Jinja2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;MarkupSafe&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Pygments&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Sphinx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;Werkzeug&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;argparse&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;docutils&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;httpretty&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;itsdangerous&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;mongoengine&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;fake-factory&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;nose&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;py-bcrypt&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;pymongo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;python-dateutil&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;requests&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;six&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;tornado&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;urllib3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;wsgiref&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="err"&gt;ujson&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To install all modules in&amp;nbsp;requirements.txt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;pip install -r requirements.txt&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Other options: simpler, maybe&amp;nbsp;faster&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://flask-pymongo.readthedocs.org/en/latest/"&gt;http://flask-pymongo.readthedocs.org/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pythonhosted.org/Flask-Classy/"&gt;http://pythonhosted.org/Flask-Classy/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Python-Eve seems to be a good solution after&amp;nbsp;all:&lt;/h4&gt;
&lt;p&gt;&lt;a href="http://python-eve.org/index.html"&gt;http://python-eve.org/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.python-eve.org/eve-docs"&gt;http://blog.python-eve.org/eve-docs&lt;/a&gt;&lt;/p&gt;</content><category term="Python"></category><category term="python"></category><category term="virtualenv"></category><category term="web"></category><category term="mongodb"></category><category term="eve"></category></entry></feed>